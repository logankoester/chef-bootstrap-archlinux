<% USE_PKG_CACHE = true %>

bash -c '
<%= "export http_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

if [ ! -f /usr/bin/chef-client ]; then
  haveged -w 1024
  pacman-key --init
  pkill haveged
  pacman-key --populate archlinux
  pacman -Syu --noconfirm

  pacman -S --noconfirm --needed wget ruby base-devel expect ntp

  ntpdate -u pool.ntp.org

  mkdir -p /root/build/
  cd /root/build/
  wget https://aur.archlinux.org/packages/ru/ruby-bundler/ruby-bundler.tar.gz
  tar -xzvf ruby-bundler.tar.gz
  cd /root/build/ruby-bundler/
  makepkg -s -f --asroot --noconfirm
  pacman -U --noconfirm ./ruby-bundler-*.pkg.tar.xz

  mkdir -p /root/build/
  cd /root/build/

<% if USE_PKG_CACHE %>
  wget -O "omnibus-chef-git-cached.pkg.tar.xz" "https://github.com/logankoester/chef-bootstrap-archlinux-omnibus/blob/master/pkg/omnibus-chef-git-11.6.0.r272.g6c61ef2-1-any.pkg.tar.xz?raw=true"
<% else %>
  wget https://aur.archlinux.org/packages/om/omnibus-chef-git/omnibus-chef-git.tar.gz
  tar -xzvf omnibus-chef-git.tar.gz
  cd /root/build/omnibus-chef-git
  makepkg -s -f --asroot --noconfirm
<% end %>
    
  expect -c "
    spawn pacman -U --noconfirm $(find . -name omnibus-chef-git*.xz)
    expect {
      \"y/n\" { send \"y\r\"; exp_continue }
    }
    exit
  "
fi

mkdir -p /etc/chef

cat > /etc/chef/validation.pem <<'EOP'
<%= validation_key %>
EOP
chmod 0600 /etc/chef/validation.pem

<% if encrypted_data_bag_secret -%>
cat > /etc/chef/encrypted_data_bag_secret <<'EOP'
<%= encrypted_data_bag_secret %>
EOP
chmod 0600 /etc/chef/encrypted_data_bag_secret
<% end -%>

<%# Generate Ohai Hints -%>
<% unless @chef_config[:knife][:hints].nil? || @chef_config[:knife][:hints].empty? -%>
mkdir -p /etc/chef/ohai/hints

<% @chef_config[:knife][:hints].each do |name, hash| -%>
cat > /etc/chef/ohai/hints/<%= name %>.json <<'EOP'
<%= hash.to_json %>
EOP
<% end -%>
<% end -%>

cat > /etc/chef/client.rb <<'EOP'
log_level        :info
log_location     STDOUT
chef_server_url  "<%= @chef_config[:chef_server_url] %>"
validation_client_name "<%= @chef_config[:validation_client_name] %>"
<% if @config[:chef_node_name] -%>
node_name "<%= @config[:chef_node_name] %>"
<% else -%>
# Using default node name (fqdn)
<% end -%>
# ArchLinux follows the Filesystem Hierarchy Standard
file_cache_path    "/var/cache/chef"
file_backup_path   "/var/lib/chef/backup"
pid_file           "/var/run/chef/client.pid"
cache_options({ :path => "/var/cache/chef/checksums", :skip_expires => true})
<% if knife_config[:bootstrap_proxy] %>
http_proxy         "<%= knife_config[:bootstrap_proxy] %>"
https_proxy        "<%= knife_config[:bootstrap_proxy] %>"
<% end -%>
EOP

cat > /etc/chef/first-boot.json <<'EOP'
<%= first_boot.to_json %>
EOP

<%= start_chef %>'
